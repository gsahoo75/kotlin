import sun.jvm.hotspot.oops.CellTypeState.value

//use of initilazer // runs at the time of object creation
class User(name: String, var lastName: String, var age: Int){
    private var name: String//can be used when need to validated
    init{
        if(name.lowercase().startsWith("a")){
            this.name=name
        }else{
            this.name="user"
            println("the name doesnot start with the letter a or A")
        }
    }

    init{
        println("there can be multiple init block, the execution order depends on there order of declaration")
    }
}


//secondary constructor
class Student(var name: String, val lastName: String,var age: Int){
    constructor(name:String): this(name,"lastname",0){
        println("2nd")
    }//secondary constructor
    constructor(name:String, lastName:String): this(name,lastName,0)//can exist multiple secondary constructor
    init{
        println("init block")
    }

}

//default value constructor

class Worker(var name: String, val lastName: String, var age:Int=17){
    init{
        println("its a constructor with default value")
    }
}

//getters and setters // they are implicit auto generated by the kotlin we can override it

class Users(firstName: String, var lastName:String="lastname"){
    var firstName=firstName
        get (){
            return "FirstName: $field"
        }
        set(value){
            field=value
        }
}

//lateinit
class Userss(firstName: String, var lastName: String){
    lateinit var favMovie:String
    //can user1.favMovie="movie"
}